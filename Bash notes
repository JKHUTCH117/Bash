curl allows you to go out to the internet and grab a url
curl cheat.sh/grep <---- grabs everything to do with grep from cheat.sh. Done within terminal.
history shows command history
!! will rerun last command
!<number> will execute the command associated with that number within history
touch creates a file
ls allows you to view files within a directory
file shows what type of file
rm removes files
rmdir removes directories
touch -t sets time and date of a file. YYYYMMDDTT:TT <---format for touch -t
.bashrc allows you to run scripts/aliases everytime a new terminal is opened
mv allows you to move a file to a new directory
ln -s <file> <filepointer> will create a symbolic link from the "filepointer" spot to the "file" spot
ln <file> <filepointer> creates a hardlink from the "filespointer" to the "file". Hardlinks will not be deleted if the actual file is deleted.
Symbolic links will no longer work if origianl file is deleted.
whereis shows filepaths for commands
find -name will find anything with the designated name given by the user
find -iname is case insensitive 
find -type will allow you to find certain data types (files, directories, etc.)
find -empty will find empty files
find -executable will find executable files
find ./ -iname "*.txt" -printf "%inode %file\n"
find ./ -type d <---- finds anything within local directory that is a directory
find ./ -type d -exec ls -l {} \;
touch ./find/{1..10}.txt
touch ./find/{empty,test,stuff}.txt
find ./find/ ! -name *.txt
cat /etc/passwd | egrep /home/
cat /etc/passwd | egrep ":[0-9]{5}:"
cat /etc/passwd | egrep -n home
cat /etc/passwd | egrep /bash -A2 or -B2 (A = after, B = before)
echo "test" ; echo "next";
test
next
> sends input to a file
echo "test" > file.test
this will overwrite everything in the file.
>> appends to a file
find /* 2>/dev/null | grep "Permission denied"
find /* 1>/dev/null > debug.log
find /* 1>/dev/null 2> debug.log

